
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define SECONDARY 4

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <100>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

   macros {
        cmd_tab: cmd_tab {
            label = "CMD_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_COMMAND>
                , <&macro_tap &kp TAB>
                , <&macro_pause_for_release>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_release &kp LEFT_COMMAND &kp LEFT_ALT>;
        };
    };

    td_l_mid: td_l_mid {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_L_MID";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&hm LSHFT D>, <&cmd_tab>;
    };

    td_l_ind: td_l_ind {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_L_INDTD";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&hm LEFT_COMMAND F>, <&kp ESC>;
    };

    td_r_ind: td_r_ind {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_R_IND";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&hm LEFT_COMMAND J>, <&caps_word>;
    };

    combos {
        compatible = "zmk,combos";
        combo_quote {
            timeout-ms = <50>;
            key-positions = <32 23>;
            bindings = <&kp SQT>;
        };
        combo_doublequote {
            timeout-ms = <50>;
            key-positions = <31 23>;
            bindings = <&kp LS(SQT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <

/*


*/
   &hm LS(EQUAL) EQUAL  &hm LS(N1) N1     &hm LS(N2) N2  &hm LS(N3) N3              &hm LS(N4) N4                  &hm LS(N5) N5          &tog 1                                                                                                     &mo 3           &hm LS(N6) N6       &hm LS(N7) N7           &hm LS(N8) N8          &hm LS(N9) N9     &hm LS(N0) N0       6&hm LS(MINUS) MINUS
   &kp TAB              &hm LS(Q) Q       &hm LS(W) W    &hm LS(E) E                &hm LS(R) R                    &hm LS(T) T            &none                                                                                                      &none           &hm LS(Y) Y         &hm LS(U) U             &hm LS(I) I            &hm LS(O) O       &hm LS(P) P         &hm LS(BSLH) BSLH
   &kp ESC              &hm LCTRL A       &hm LALT S     &td_l_mid                  &td_l_ind                      &hm LS(G) G            &none           &kp LCTRL      &kp LALT         &none   &none       &kp RIGHT_COMMAND       &kp RCTRL      &none           &hm LS(H) H         &td_r_ind               &hm RSHFT K            &hm RALT L        &hm RCTRL SEMI      &hm LS(SQT) SQT
   &kp LSHFT            &hm LS(Z) Z       &hm LG(X) X    &hm LG(C) C                &hm LG(V) V                    &hm LS(B) B            &none           &none          &kp HOME         &none   &none       &kp PG_UP               &none          &none           &hm LS(N) N         &hm LG(Z) M             &hm LG(LS(Z)) COMMA    &hm LS(DOT) DOT   &hm LS(FSLH) FSLH   &kp RSHFT
   &mo 2                &kp GRAVE         &kp TAB        &kp CAPS                   &kp BSPC                       &lt SECONDARY BSPC     &hm LSHFT RIGHT_COMMAND        &kp END                              &kp PG_DN               &kp ENTER                      &kp SPACE           &kp TAB                 &kp DOWN               &kp LBKT          &kp RBKT            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans   &none   &none  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                      &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        secondary_layer {
            bindings = <
   &kp EQUAL          &kp N1          &kp N2         &kp N3           &kp N4              &kp N5              &tog 1                                                                                                               &mo 3           &kp N6        &kp N7                  &kp N8          &kp N9         &kp N0            &kp MINUS
   &kp TAB            &kp Q           &kp N7         &kp N8           &kp N9              &kp T               &none                                                                                                                &none           &kp C_VOL_UP  &kp C_BRI_UP            &kp UP          &kp C_BRI_DN   &kp P             &kp BSLH
   &kp ESC            &hm LCTRL A     &hm LALT N4    &hm LSHFT N5     &hm LEFT_COMMAND N6 &kp N0              &none                     &kp LCTRL      &kp LALT         &none   &none       &kp LEFT_COMMAND        &kp RCTRL      &none           &kp C_VOL_DN  &kp LEFT                &kp DOWN        &kp RIGHT      &hm RCTRL SEMI    &kp SQT
   &kp LSHFT          &kp Z           &kp N1         &kp N2           &kp N3              &kp BSPC            &none                     &none          &kp HOME         &none   &none       &kp PG_UP               &none          &none           &kp N         &kp M                   &kp COMMA       &kp DOT        &kp FSLH          &kp RSHFT
   &mo 2              &kp GRAVE       &kp CAPS       &kp N0           &kp DEL             &kp BSPC            &hm LSHFT RIGHT_COMMAND                  &kp END                              &kp PG_DN               &kp ENTER      &kp SPACE                     &kp UP                  &kp DOWN        &kp LBKT       &kp RBKT          &mo 2
            >;
        };

    };
};
