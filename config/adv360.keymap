
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define KOREAN 1
#define FEATURE_BY_L 2
#define FEATURE_BY_R 3
#define FN 4
#define MOD 5

/ {

     macros {
        dqts: doublequotes {
            label = "DOUBLEQUOTES";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DQT &kp DQT &kp LEFT>;
        };
        sqts: singlequotes {
            label = "SINGLEQUOTES";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SQT &kp SQT &kp LEFT>;
        };       
        brakets: brakets {
            label = "BRAKETS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT &kp LEFT>;
        };
        braces: braces {
            label = "BRACES";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC &kp LEFT>;
        };
        parens: parenthesises {
            label = "PARENS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>;
        };
        graves: graves {
            label = "GRAVES";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GRAVE &kp GRAVE &kp LEFT>;
        };
        cmd_tab: cmd_tab {
            label = "CMD_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_COMMAND>
                , <&macro_tap &kp TAB>
                , <&macro_pause_for_release>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_release &kp LEFT_COMMAND &kp LEFT_ALT>;
        };
        thick_arrow: thick_arrow {
            label = "THICK_ARROW";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp EQUAL>
                , <&macro_tap &kp GT>;
        };
        thin_arrow: thin_arrow {
            label = "THIN_ARROW";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MINUS &kp GT>;
        };
        ltgt: ltgt {
            label = "LTGT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LT &kp GT &kp LEFT>;
        };
        to_korean: to_korean {
            label = "TO_KOREAN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RIGHT_COMMAND &to KOREAN>; 
        };
        to_default: to_default {
            label = "TO_DEFAULT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RIGHT_COMMAND &to DEFAULT>; 
        }; 

    }; 

    combos {
        
        compatible = "zmk,combos";

        combo_doublequotes {
            timeout-ms = <85>;
            key-positions = <31 23>;
            bindings = <&dqts>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_singlequotes {
            timeout-ms = <85>;
            key-positions = <32 23>;
            bindings = <&sqts>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_underscore {
            timeout-ms = <85>;
            key-positions = <31 24>;
            bindings = <&kp UNDERSCORE>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_minus {
            timeout-ms = <85>;
            key-positions = <32 24>;
            bindings = <&kp MINUS>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_pipe {
            timeout-ms = <60>;
            key-positions = <31 25>;
            bindings = <&kp PIPE>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_backslash {
            timeout-ms = <60>;
            key-positions = <32 25>;
            bindings = <&kp BSLH>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_plus {
            timeout-ms = <75>;
            key-positions = <31 43>;
            bindings = <&kp PLUS>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_equal {
            timeout-ms = <75>;
            key-positions = <32 43>;
            bindings = <&kp EQUAL>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_brakets {
            timeout-ms = <50>;
            key-positions = <30 44>;
            bindings = <&brakets>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_braces {
            timeout-ms = <60>;
            key-positions = <31 44>;
            bindings = <&braces>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_parenthesises {
            timeout-ms = <60>;
            key-positions = <32 44>;
            bindings = <&parens>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_tilde {
            timeout-ms = <60>;
            key-positions = <31 45>;
            bindings = <&kp TILDE>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_graves {
            timeout-ms = <60>;
            key-positions = <32 45>;
            bindings = <&graves>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_percent {
            timeout-ms = <75>;
            key-positions = <30 63>;
            bindings = <&kp PRCNT>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_hash {
            timeout-ms = <75>;
            key-positions = <31 63>;
            bindings = <&kp HASH>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_exclamation {
            timeout-ms = <75>;
            key-positions = <32 63>;
            bindings = <&kp EXCL>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_caret {
            timeout-ms = <75>;
            key-positions = <30 64>;
            bindings = <&kp CARET>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_amps {
            timeout-ms = <75>;
            key-positions = <31 64>;
            bindings = <&kp AMPS>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_star {
            timeout-ms = <75>;
            key-positions = <32 64>;
            bindings = <&kp STAR>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_dollar {
            timeout-ms = <75>;
            key-positions = <31 65>;
            bindings = <&kp DLLR>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };
        combo_at {
            timeout-ms = <75>;
            key-positions = <32 65>;
            bindings = <&kp AT>;
            layers = <DEFAULT FEATURE_BY_L FEATURE_BY_R>;
        };

    };

    behaviors {
        #include "macros.dtsi"

        ht: hold_tap_default {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_DEFAULT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <145>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <145>;
            global-quick-tap; 
            retro-tap;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
  
        hm_mid: homerow_mods_middle_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_MIDDLE_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <150>; /* faster */
            quick_tap_ms = <110>;
            global-quick-tap;
            /* no retro-tap; */
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hm_pinky: homerow_mods_pinky_finger {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKY_FINGER";
            #binding-cells = <2>;
            tapping-term-ms = <275>; /* slower as pinky has less muscular power */
            quick_tap_ms = <175>;
            global-quick-tap;
            retro-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hlt: hold_preferred_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED_LT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;            
        };

        ht_ltgt: hold_tap_ltgt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LTGT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <145>;
            flavor = "balanced";
            bindings = <&ltgt>, <&kp>;
        };

        ht_ly_ck: hold_tap_layer_check {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER_CHECK";
            #binding-cells = <2>;
            tapping-term-ms = <2000>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_sk_shft: tap_dance_sticky_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_STICKY_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <225>;
            bindings = <&hm LEFT_COMMAND J>, <&sk RSHFT>;
        };

        td_tab: tap_dance_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <225>;
            bindings = <&hm LEFT_COMMAND F>, <&kp TAB>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        layer_default { /* Assume it is English */
            bindings = <
   &ht PLUS EQUAL       &ht EXCL N1             &ht AT N2      &ht HASH N3                &ht DLLR N4             &ht PRCNT N5           &tog DEFAULT                                                                                                             &mo MOD                 &ht CARET N6        &ht AMPS N7             &ht STAR N8            &ht LPAR N9       &ht RPAR N0            &ht UNDERSCORE MINUS
   &kp TAB              &ht LS(Q) Q             &ht LS(W) W    &ht LS(E) E                &ht LS(R) R             &ht LS(T) T            &none                                                                                                                    &none                   &ht LS(Y) Y         &ht LS(U) U             &ht LS(I) I            &ht LS(O) O       &ht LS(P) P            &ht LS(BSLH) BSLH
   &kp ESC              &hm_pinky LCTRL A       &hm LALT S     &hm_mid LSHFT D            &td_tab                 &ht LS(G) G            &ht_ly_ck RIGHT_COMMAND N0  &kp LCTRL        &kp LALT         &none   &none       &kp RIGHT_COMMAND       &kp RCTRL      &kp K_PWR               &ht LS(H) H         &td_sk_shft             &hm_mid RSHFT K        &hm RALT L        &hm_pinky RCTRL SEMI   &hm LS(SQT) SQT
   &kp LSHFT            &ht LG(Z) Z             &ht LG(X) X    &ht LG(C) C                &ht LG(V) V             &ht LS(B) B            &none                       &none            &kp HOME         &none   &none       &kp PG_UP               &none          &none                   &ht LS(N) N         &ht LG(Z) M             &ht LG(LS(Z)) COMMA    &ht_ltgt 0 DOT    &ht LS(FSLH) FSLH      &kp RSHFT
   &mo FN               &ht LS(GRAVE) GRAVE     &kp CAPS       &kp DEL                    &kp BSPC                                       &hlt FEATURE_BY_L BSPC      &to_korean       &kp END                              &kp PG_DN               &kp ENTER      &hlt FEATURE_BY_R SPACE                     &kp TAB                 &kp DOWN               &ht LS(LBKT) LBKT &ht LS(RBKT) RBKT      &mo FN
            >;
        };

        layer_korean { /* Assume it is Korean */
            bindings = <
   &ht PLUS EQUAL       &ht EXCL N1             &ht AT N2      &ht HASH N3                &ht DLLR N4             &ht PRCNT N5           &tog DEFAULT                                                                                                            &mo MOD                 &ht CARET N6        &ht AMPS N7             &ht STAR N8            &ht LPAR N9       &ht RPAR N0            &ht UNDERSCORE MINUS
   &kp TAB              &ht LS(Q) Q             &ht LS(W) W    &ht LS(E) E                &ht LS(R) R             &ht LS(T) T            &none                                                                                                                   &none                   &ht LS(Y) Y         &ht LS(U) U             &ht LS(I) I            &ht LS(O) O       &ht LS(P) P            &ht LS(BSLH) BSLH
   &kp ESC              &hm_pinky LCTRL A       &hm LALT S     &hm_mid LSHFT D            &hm LEFT_COMMAND F      &ht LS(G) G            &ht_ly_ck RIGHT_COMMAND N1 &kp LCTRL        &kp LALT         &none   &none       &kp RIGHT_COMMAND       &kp RCTRL      &kp K_PWR               &ht LS(H) H         &td_sk_shft             &hm_mid RSHFT K        &hm RALT L        &hm_pinky RCTRL SEMI   &hm LS(SQT) SQT
   &kp LSHFT            &ht LG(Z) Z             &ht LG(X) X    &ht LG(C) C                &ht LG(V) V             &ht LS(B) B            &none                      &none            &kp HOME         &none   &none       &kp PG_UP               &none          &none                   &ht LS(N) N         &ht LG(Z) M             &ht LG(LS(Z)) COMMA    &ht_ltgt 0 DOT    &ht LS(FSLH) FSLH      &kp RSHFT
   &mo FN               &ht LS(GRAVE) GRAVE     &kp CAPS       &kp DEL                    &kp BSPC                                       &hlt FEATURE_BY_L BSPC     &to_default      &kp END                              &kp PG_DN               &kp ENTER      &hlt FEATURE_BY_R SPACE                     &kp TAB                 &kp DOWN               &ht LS(LBKT) LBKT &ht LS(RBKT) RBKT      &mo FN
            >;
        };

        layer_feature_by_left { /* Triggered by the left thumb */
            bindings = <
   &ht PLUS EQUAL       &ht EXCL N1             &ht AT N2      &ht HASH N3                &ht DLLR N4             &ht PRCNT N5           &tog DEFAULT                                                                                                            &mo MOD                 &ht CARET N6        &ht AMPS N7             &ht STAR N8            &ht LPAR N9       &ht RPAR N0            &ht UNDERSCORE MINUS
   &kp TAB              &kp LG(Q)               &kp LG(W)      &kp LG(T)                  &kp LG(GRAVE)           &ht LS(T) T            &none                                                                                                                   &none                   &kp C_VOL_UP        &ht LS(U) U             &kp UP                 &ht LS(O) O       &kp C_BRI_DN           &ht LS(BSLH) BSLH
   &kp ESC              &kp LCTRL               &kp LALT       &kp LSHFT                  &kp LEFT_COMMAND        &kp SPACE              &kp N2                     &kp LCTRL        &kp LALT         &none   &none       &kp RIGHT_COMMAND       &kp RCTRL      &none                   &kp C_VOL_DN        &kp LEFT                &kp DOWN               &kp RIGHT         &kp C_BRI_UP           &hm LS(SQT) SQT
   &kp LSHFT            &ht LG(Z) Z             &ht LG(X) X    &kp ESC                    &cmd_tab                &kp BSPC               &none                      &none            &kp HOME         &none   &none       &kp PG_UP               &none          &none                   &ht LS(N) N         &caps_word              &thick_arrow           &thin_arrow       &ht LS(FSLH) FSLH      &kp RSHFT
   &mo FN               &ht LS(GRAVE) GRAVE     &kp CAPS       &kp DEL                    &kp BSPC                                       &trans                     &trans           &kp END                              &kp PG_DN               &kp BSPC       &kp SPACE                                   &kp TAB                 &kp DOWN               &ht LS(LBKT) LBKT &ht LS(RBKT) RBKT      &mo FN
            >;
        };

        layer_feature_by_right { /* Triggered by the right thumb */
            bindings = <
   &ht PLUS EQUAL       &ht EXCL N1             &ht AT N2      &ht HASH N3                &ht DLLR N4             &ht PRCNT N5           &tog DEFAULT                                                                                                            &mo MOD                 &ht CARET N6        &ht AMPS N7             &ht STAR N8            &ht LPAR N9       &ht RPAR N0            &ht UNDERSCORE MINUS
   &kp TAB              &kp LG(Q)               &kp N4         &kp N5                     &kp N6                  &ht LS(T) T            &none                                                                                                                   &none                   &kp C_VOL_UP        &kp N7                  &kp N8                 &kp N9            &kp C_BRI_DN           &ht LS(BSLH) BSLH
   &kp ESC              &kp LCTRL               &kp LALT       &kp TAB                    &sk LSHFT               &kp SPACE              &kp N2                     &kp LCTRL        &kp LALT         &none   &none       &kp RIGHT_COMMAND       &kp RCTRL      &none                   &kp C_VOL_DN        &kp BSPC                &kp DEL                &ht LS(L) L       &kp C_BRI_UP           &hm LS(SQT) SQT
   &kp LSHFT            &ht LG(Z) Z             &kp N1         &kp N2                     &kp N3                  &kp BSPC               &none                      &none            &kp HOME         &none   &none       &kp PG_UP               &none          &none                   &ht LS(N) N         &caps_word              &ht LS(COMMA) COMMA    &ht LS(DOT) DOT   &ht LS(FSLH) FSLH      &kp RSHFT
   &mo FN               &ht LS(GRAVE) GRAVE     &kp CAPS       &ht RPAR N0                &kp BSPC                                       &kp BSPC                   &trans           &kp END                              &kp PG_DN               &kp BSPC       &trans                                      &kp TAB                 &kp DOWN               &ht LS(LBKT) LBKT &ht LS(RBKT) RBKT      &mo FN
            >;
        };

        layer_fn {
            bindings = <
   &ht C_BRI_DN F1      &ht C_BRI_UP F2         &ht LC(UP) F3  &kp F4                     &ht C_REC F5            &kp F6                 &none                                                                                                                   &mo MOD                 &ht C_PREV F7       &ht C_PP F8             &ht C_NEXT F9          &ht C_MUTE F10    &ht C_VOL_DN F11       &ht C_VOL_UP F12
   &kp TAB              &ht LS(Q) Q             &ht LS(W) W    &ht LS(E) E                &ht LS(R) R             &ht LS(T) T            &none                                                                                                                   &none                   &ht LS(Y) Y         &ht LS(U) U             &ht LS(I) I            &ht LS(O) O       &ht LS(P) P            &ht LS(BSLH) BSLH
   &kp ESC              &hm_pinky LCTRL A       &hm LALT S     &hm_mid LSHFT D            &hm LEFT_COMMAND F      &ht LS(G) G            &kp N3                     &kp LCTRL        &kp LALT         &none   &none       &kp RIGHT_COMMAND       &kp RCTRL      &kp K_PWR               &ht LS(H) H         &td_sk_shft             &hm_mid RSHFT K        &hm RALT L        &hm_pinky RCTRL SEMI   &hm LS(SQT) SQT
   &kp LSHFT            &ht LG(Z) Z             &ht LG(X) X    &ht LG(C) C                &ht LG(V) V             &ht LS(B) B            &none                      &none            &kp HOME         &none   &none       &kp PG_UP               &none          &none                   &ht LS(N) N         &ht LG(Z) M             &ht LG(LS(Z)) COMMA    &ht_ltgt 0 DOT    &ht LS(FSLH) FSLH      &kp RSHFT
   &trans               &ht LS(GRAVE) GRAVE     &kp CAPS       &kp DEL                    &kp BSPC                                       &kp BSPC                   &none            &kp END                              &kp PG_DN               &kp ENTER      &kp SPACE                                   &kp TAB                 &kp DOWN               &ht LS(LBKT) LBKT &ht LS(RBKT) RBKT      &trans
            >;
        };

        layer_mod {
            bindings = <
   &none                &bt BT_SEL 0            &bt BT_SEL 1   &bt BT_SEL 2               &bt BT_SEL 3             &bt BT_SEL 4          &none                                                                                                                   &trans                  &bt BT_SEL 0        &bt BT_SEL 1            &bt BT_SEL 2           &bt BT_SEL 3       &bt BT_SEL 4          &none
   &none                &none                   &none          &none                      &none                    &none                 &bootloader                                                                                                             &bootloader             &none               &none                   &none                  &none              &none                 &none
   &none                &none                   &none          &none                      &none                    &none                 &rgb_ug RGB_MEFS_CMD 5     &bt BT_CLR       &none            &none   &none       &bt BT_CLR              &bt BT_CLR     &rgb_ug RGB_MEFS_CMD 5  &none               &none                   &none                  &none              &none                 &none
   &none                &none                   &none          &none                      &none                    &none                 &none                      &none            &none            &none   &none       &none                   &none          &none                   &none               &none                   &none                  &none              &none                 &none
   &none                &none                   &none          &bl BL_INC                 &bl BL_DEC                                     &rgb_ug RGB_TOG            &bl BL_TOG       &none                                &none                   &bl BL_TOG     &rgb_ug RGB_TOG                             &bl BL_INC              &bl BL_DEC             &none              &none                 &none
            >;
        };
    };
};
